{"ast":null,"code":"var _jsxFileName = \"/workspaces/Myddaaapp/dex-react/src/components/MyLiquidity.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TokenModal from './TokenModal';\nimport { ethers } from 'ethers';\nimport { routerABI } from '../contracts/routerABI';\nimport { erc20ABI } from '../contracts/erc20ABI';\nimport { factoryABI } from '../contracts/factoryABI';\nimport { lpTokenABI } from '../contracts/lpTokenABI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROUTER_ADDRESS = \"0x144e18DB06B4553b94ED397610D2FBf809790545\";\nconst FACTORY_ADDRESS = \"0xc98d287eFCBbb177D641FD2105dEC57996335766\";\nconst WMON_ADDRESS = \"0xf6C4e67A551bd10444e3b439A4Eb19ec46eC1215\";\nfunction Liquidity({\n  wallet,\n  notify,\n  tokenList,\n  setTokenList\n}) {\n  _s();\n  const [selectedTokenA, setSelectedTokenA] = useState(null);\n  const [selectedTokenB, setSelectedTokenB] = useState(null);\n  const [amountA, setAmountA] = useState('');\n  const [amountB, setAmountB] = useState('');\n  const [balances, setBalances] = useState({\n    tokenA: '0',\n    tokenB: '0'\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTarget, setModalTarget] = useState('');\n  const {\n    provider,\n    signer,\n    userAddress\n  } = wallet;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchBalances();\n    }, 15000);\n    fetchBalances();\n    return () => clearInterval(interval);\n  }, [userAddress, selectedTokenA, selectedTokenB]);\n  const fetchBalances = async () => {\n    if (!userAddress) return;\n    if (selectedTokenA) await fetchBalanceForToken(selectedTokenA, 'tokenA');\n    if (selectedTokenB) await fetchBalanceForToken(selectedTokenB, 'tokenB');\n  };\n  const fetchBalanceForToken = async (token, key) => {\n    try {\n      let balance;\n      if (token.address === \"MON\") {\n        balance = await provider.getBalance(userAddress);\n      } else {\n        const tokenContract = new ethers.Contract(token.address, erc20ABI, provider);\n        balance = await tokenContract.balanceOf(userAddress);\n      }\n      balance = ethers.utils.formatUnits(balance, token.decimals);\n      setBalances(prev => ({\n        ...prev,\n        [key]: abbreviateNumber(parseFloat(balance))\n      }));\n    } catch (error) {\n      console.error(`Error fetching balance for ${token.symbol}:`, error);\n    }\n  };\n  const abbreviateNumber = num => {\n    if (num >= 1e12) return (num / 1e12).toFixed(2) + \"T\";\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + \"B\";\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + \"M\";\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + \"K\";\n    return num.toFixed(5);\n  };\n  const isStable = async tokenAddress => {\n    if (tokenAddress === \"MON\") return false;\n    const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n    return await factoryContract.isStableCoin(tokenAddress);\n  };\n  useEffect(() => {\n    const calculateAmountB = async () => {\n      if (!selectedTokenA || !selectedTokenB || !amountA || parseFloat(amountA) <= 0) {\n        setAmountB('');\n        return;\n      }\n      let amountA_BN = ethers.utils.parseUnits(amountA, selectedTokenA.decimals);\n      let tokenAForPair = selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address;\n      let tokenBForPair = selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address;\n      const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n      const pairAddress = await factoryContract.getPair(tokenAForPair, tokenBForPair);\n      const isStableA = await isStable(tokenAForPair);\n      const isStableB = await isStable(tokenBForPair);\n      if (pairAddress !== ethers.constants.AddressZero) {\n        const pairContract = new ethers.Contract(pairAddress, lpTokenABI, provider);\n        const [reserve0, reserve1] = await pairContract.getReserves();\n        let reserveA = tokenAForPair.toLowerCase() < tokenBForPair.toLowerCase() ? reserve0 : reserve1;\n        let reserveB = tokenAForPair.toLowerCase() < tokenBForPair.toLowerCase() ? reserve1 : reserve0;\n        if (reserveA.isZero()) return;\n        let amountB;\n        if (isStableA && isStableB) {\n          const decimalsA = selectedTokenA.decimals;\n          const decimalsB = selectedTokenB.decimals;\n          amountB = amountA_BN.mul(ethers.BigNumber.from(10).pow(decimalsB)).div(ethers.BigNumber.from(10).pow(decimalsA));\n        } else {\n          amountB = amountA_BN.mul(reserveB).div(reserveA);\n        }\n        setAmountB(ethers.utils.formatUnits(amountB, selectedTokenB.decimals));\n      }\n    };\n    calculateAmountB();\n  }, [amountA, selectedTokenA, selectedTokenB]);\n  const openTokenModal = target => {\n    setModalTarget(target);\n    setIsModalOpen(true);\n  };\n  const handleTokenSelect = token => {\n    if (modalTarget === 'tokenA') setSelectedTokenA(token);else if (modalTarget === 'tokenB') setSelectedTokenB(token);\n    setIsModalOpen(false);\n    fetchBalances();\n  };\n  const ensureApproval = async (token, amount, spender) => {\n    if (token.address === \"MON\") return true;\n    const tokenContract = new ethers.Contract(token.address, erc20ABI, signer);\n    const allowance = await tokenContract.allowance(userAddress, spender);\n    if (allowance.lt(amount)) {\n      notify(`Approving ${token.symbol}...`, \"info\");\n      const tx = await tokenContract.approve(spender, amount);\n      await tx.wait();\n      notify(`${token.symbol} approved successfully`, \"success\");\n    }\n    return true;\n  };\n  const handleAddLiquidity = async () => {\n    if (!selectedTokenA || !selectedTokenB) return notify(\"Select both tokens\", \"error\");\n    if (!amountA || parseFloat(amountA) <= 0) return notify(\"Enter a valid amount for Token A\", \"error\");\n    if (!amountB || parseFloat(amountB) <= 0) return notify(\"Enter a valid amount for Token B\", \"error\");\n    const amountA_BN = ethers.utils.parseUnits(amountA, selectedTokenA.decimals);\n    const amountB_BN = ethers.utils.parseUnits(amountB, selectedTokenB.decimals);\n    const tokenAForPair = selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address;\n    const tokenBForPair = selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address;\n    let balanceA, balanceB;\n    if (selectedTokenA.address === \"MON\") {\n      balanceA = await provider.getBalance(userAddress);\n    } else {\n      const tokenAContract = new ethers.Contract(selectedTokenA.address, erc20ABI, provider);\n      balanceA = await tokenAContract.balanceOf(userAddress);\n    }\n    if (selectedTokenB.address === \"MON\") {\n      balanceB = await provider.getBalance(userAddress);\n    } else {\n      const tokenBContract = new ethers.Contract(selectedTokenB.address, erc20ABI, provider);\n      balanceB = await tokenBContract.balanceOf(userAddress);\n    }\n    if (balanceA.lt(amountA_BN)) return notify(`Insufficient ${selectedTokenA.symbol} balance`, \"error\");\n    if (balanceB.lt(amountB_BN)) return notify(`Insufficient ${selectedTokenB.symbol} balance`, \"error\");\n    try {\n      const deadline = Math.floor(Date.now() / 1000) + 600;\n      const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, signer);\n      let tx;\n      if (selectedTokenA.address === \"MON\" || selectedTokenB.address === \"MON\") {\n        let token, amountTokenDesired, valueETH;\n        if (selectedTokenA.address === \"MON\") {\n          token = selectedTokenB;\n          amountTokenDesired = amountB_BN;\n          valueETH = amountA_BN;\n        } else {\n          token = selectedTokenA;\n          amountTokenDesired = amountA_BN;\n          valueETH = amountB_BN;\n        }\n        if (token.address !== \"MON\") await ensureApproval(token, amountTokenDesired, ROUTER_ADDRESS);\n        tx = await routerContract.addLiquidityETH(token.address, amountTokenDesired, amountTokenDesired.mul(95).div(100), valueETH.mul(95).div(100), deadline, {\n          value: valueETH,\n          gasLimit: 6000000\n        });\n      } else {\n        await ensureApproval(selectedTokenA, amountA_BN, ROUTER_ADDRESS);\n        await ensureApproval(selectedTokenB, amountB_BN, ROUTER_ADDRESS);\n        tx = await routerContract.addLiquidity(selectedTokenA.address, selectedTokenB.address, amountA_BN, amountB_BN, amountA_BN.mul(95).div(100), amountB_BN.mul(95).div(100), {\n          gasLimit: 6000000\n        });\n      }\n      notify(\"Adding liquidity...\", \"info\");\n      await tx.wait();\n      notify(\"Liquidity added successfully\", \"success\");\n      fetchBalances();\n    } catch (error) {\n      console.error(\"Add liquidity error:\", error);\n      notify(\"Liquidity addition failed: \" + (error.reason || error.message), \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"liquidityTab\",\n    className: \"tabContent\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Liquidity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"liquidity-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"liquidity-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-select\",\n            onClick: () => openTokenModal('tokenA'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (selectedTokenA === null || selectedTokenA === void 0 ? void 0 : selectedTokenA.logo) || \"https://via.placeholder.com/24\",\n              alt: \"Token Logo\",\n              className: \"tokenLogo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (selectedTokenA === null || selectedTokenA === void 0 ? void 0 : selectedTokenA.symbol) || \"Select Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amountA,\n            onChange: e => setAmountA(e.target.value),\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balanceInfo\",\n          children: [\"Balance: \", balances.tokenA]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"liquidity-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-select\",\n            onClick: () => openTokenModal('tokenB'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (selectedTokenB === null || selectedTokenB === void 0 ? void 0 : selectedTokenB.logo) || \"https://via.placeholder.com/24\",\n              alt: \"Token Logo\",\n              className: \"tokenLogo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (selectedTokenB === null || selectedTokenB === void 0 ? void 0 : selectedTokenB.symbol) || \"Select Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amountB,\n            onChange: e => setAmountB(e.target.value),\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balanceInfo\",\n          children: [\"Balance: \", balances.tokenB]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"actionButton\",\n        onClick: handleAddLiquidity,\n        children: \"Add Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(TokenModal, {\n      tokenList: tokenList,\n      setTokenList: setTokenList,\n      onSelect: handleTokenSelect,\n      onClose: () => setIsModalOpen(false),\n      provider: provider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(Liquidity, \"GHTY1AYrpN1hIHOV4TwjkkLq188=\");\n_c = Liquidity;\nexport default Liquidity;\nvar _c;\n$RefreshReg$(_c, \"Liquidity\");","map":{"version":3,"names":["React","useState","useEffect","TokenModal","ethers","routerABI","erc20ABI","factoryABI","lpTokenABI","jsxDEV","_jsxDEV","ROUTER_ADDRESS","FACTORY_ADDRESS","WMON_ADDRESS","Liquidity","wallet","notify","tokenList","setTokenList","_s","selectedTokenA","setSelectedTokenA","selectedTokenB","setSelectedTokenB","amountA","setAmountA","amountB","setAmountB","balances","setBalances","tokenA","tokenB","isModalOpen","setIsModalOpen","modalTarget","setModalTarget","provider","signer","userAddress","interval","setInterval","fetchBalances","clearInterval","fetchBalanceForToken","token","key","balance","address","getBalance","tokenContract","Contract","balanceOf","utils","formatUnits","decimals","prev","abbreviateNumber","parseFloat","error","console","symbol","num","toFixed","isStable","tokenAddress","factoryContract","isStableCoin","calculateAmountB","amountA_BN","parseUnits","tokenAForPair","tokenBForPair","pairAddress","getPair","isStableA","isStableB","constants","AddressZero","pairContract","reserve0","reserve1","getReserves","reserveA","toLowerCase","reserveB","isZero","decimalsA","decimalsB","mul","BigNumber","from","pow","div","openTokenModal","target","handleTokenSelect","ensureApproval","amount","spender","allowance","lt","tx","approve","wait","handleAddLiquidity","amountB_BN","balanceA","balanceB","tokenAContract","tokenBContract","deadline","Math","floor","Date","now","routerContract","amountTokenDesired","valueETH","addLiquidityETH","value","gasLimit","addLiquidity","reason","message","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","logo","alt","type","onChange","e","placeholder","onSelect","onClose","_c","$RefreshReg$"],"sources":["/workspaces/Myddaaapp/dex-react/src/components/MyLiquidity.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TokenModal from './TokenModal';\nimport { ethers } from 'ethers';\nimport { routerABI } from '../contracts/routerABI';\nimport { erc20ABI } from '../contracts/erc20ABI';\nimport { factoryABI } from '../contracts/factoryABI';\nimport { lpTokenABI } from '../contracts/lpTokenABI';\n\nconst ROUTER_ADDRESS = \"0x144e18DB06B4553b94ED397610D2FBf809790545\";\nconst FACTORY_ADDRESS = \"0xc98d287eFCBbb177D641FD2105dEC57996335766\";\nconst WMON_ADDRESS = \"0xf6C4e67A551bd10444e3b439A4Eb19ec46eC1215\";\n\nfunction Liquidity({ wallet, notify, tokenList, setTokenList }) {\n  const [selectedTokenA, setSelectedTokenA] = useState(null);\n  const [selectedTokenB, setSelectedTokenB] = useState(null);\n  const [amountA, setAmountA] = useState('');\n  const [amountB, setAmountB] = useState('');\n  const [balances, setBalances] = useState({ tokenA: '0', tokenB: '0' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTarget, setModalTarget] = useState('');\n  const { provider, signer, userAddress } = wallet;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchBalances();\n    }, 15000);\n    fetchBalances();\n    return () => clearInterval(interval);\n  }, [userAddress, selectedTokenA, selectedTokenB]);\n\n  const fetchBalances = async () => {\n    if (!userAddress) return;\n    if (selectedTokenA) await fetchBalanceForToken(selectedTokenA, 'tokenA');\n    if (selectedTokenB) await fetchBalanceForToken(selectedTokenB, 'tokenB');\n  };\n\n  const fetchBalanceForToken = async (token, key) => {\n    try {\n      let balance;\n      if (token.address === \"MON\") {\n        balance = await provider.getBalance(userAddress);\n      } else {\n        const tokenContract = new ethers.Contract(token.address, erc20ABI, provider);\n        balance = await tokenContract.balanceOf(userAddress);\n      }\n      balance = ethers.utils.formatUnits(balance, token.decimals);\n      setBalances(prev => ({ ...prev, [key]: abbreviateNumber(parseFloat(balance)) }));\n    } catch (error) {\n      console.error(`Error fetching balance for ${token.symbol}:`, error);\n    }\n  };\n\n  const abbreviateNumber = (num) => {\n    if (num >= 1e12) return (num / 1e12).toFixed(2) + \"T\";\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + \"B\";\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + \"M\";\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + \"K\";\n    return num.toFixed(5);\n  };\n\n  const isStable = async (tokenAddress) => {\n    if (tokenAddress === \"MON\") return false;\n    const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n    return await factoryContract.isStableCoin(tokenAddress);\n  };\n\n  useEffect(() => {\n    const calculateAmountB = async () => {\n      if (!selectedTokenA || !selectedTokenB || !amountA || parseFloat(amountA) <= 0) {\n        setAmountB('');\n        return;\n      }\n      let amountA_BN = ethers.utils.parseUnits(amountA, selectedTokenA.decimals);\n      let tokenAForPair = selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address;\n      let tokenBForPair = selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address;\n      const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n      const pairAddress = await factoryContract.getPair(tokenAForPair, tokenBForPair);\n      const isStableA = await isStable(tokenAForPair);\n      const isStableB = await isStable(tokenBForPair);\n      if (pairAddress !== ethers.constants.AddressZero) {\n        const pairContract = new ethers.Contract(pairAddress, lpTokenABI, provider);\n        const [reserve0, reserve1] = await pairContract.getReserves();\n        let reserveA = tokenAForPair.toLowerCase() < tokenBForPair.toLowerCase() ? reserve0 : reserve1;\n        let reserveB = tokenAForPair.toLowerCase() < tokenBForPair.toLowerCase() ? reserve1 : reserve0;\n        if (reserveA.isZero()) return;\n        let amountB;\n        if (isStableA && isStableB) {\n          const decimalsA = selectedTokenA.decimals;\n          const decimalsB = selectedTokenB.decimals;\n          amountB = amountA_BN.mul(ethers.BigNumber.from(10).pow(decimalsB)).div(ethers.BigNumber.from(10).pow(decimalsA));\n        } else {\n          amountB = amountA_BN.mul(reserveB).div(reserveA);\n        }\n        setAmountB(ethers.utils.formatUnits(amountB, selectedTokenB.decimals));\n      }\n    };\n    calculateAmountB();\n  }, [amountA, selectedTokenA, selectedTokenB]);\n\n  const openTokenModal = (target) => {\n    setModalTarget(target);\n    setIsModalOpen(true);\n  };\n\n  const handleTokenSelect = (token) => {\n    if (modalTarget === 'tokenA') setSelectedTokenA(token);\n    else if (modalTarget === 'tokenB') setSelectedTokenB(token);\n    setIsModalOpen(false);\n    fetchBalances();\n  };\n\n  const ensureApproval = async (token, amount, spender) => {\n    if (token.address === \"MON\") return true;\n    const tokenContract = new ethers.Contract(token.address, erc20ABI, signer);\n    const allowance = await tokenContract.allowance(userAddress, spender);\n    if (allowance.lt(amount)) {\n      notify(`Approving ${token.symbol}...`, \"info\");\n      const tx = await tokenContract.approve(spender, amount);\n      await tx.wait();\n      notify(`${token.symbol} approved successfully`, \"success\");\n    }\n    return true;\n  };\n\n  const handleAddLiquidity = async () => {\n    if (!selectedTokenA || !selectedTokenB) return notify(\"Select both tokens\", \"error\");\n    if (!amountA || parseFloat(amountA) <= 0) return notify(\"Enter a valid amount for Token A\", \"error\");\n    if (!amountB || parseFloat(amountB) <= 0) return notify(\"Enter a valid amount for Token B\", \"error\");\n\n    const amountA_BN = ethers.utils.parseUnits(amountA, selectedTokenA.decimals);\n    const amountB_BN = ethers.utils.parseUnits(amountB, selectedTokenB.decimals);\n    const tokenAForPair = selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address;\n    const tokenBForPair = selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address;\n\n    let balanceA, balanceB;\n    if (selectedTokenA.address === \"MON\") {\n      balanceA = await provider.getBalance(userAddress);\n    } else {\n      const tokenAContract = new ethers.Contract(selectedTokenA.address, erc20ABI, provider);\n      balanceA = await tokenAContract.balanceOf(userAddress);\n    }\n    if (selectedTokenB.address === \"MON\") {\n      balanceB = await provider.getBalance(userAddress);\n    } else {\n      const tokenBContract = new ethers.Contract(selectedTokenB.address, erc20ABI, provider);\n      balanceB = await tokenBContract.balanceOf(userAddress);\n    }\n    if (balanceA.lt(amountA_BN)) return notify(`Insufficient ${selectedTokenA.symbol} balance`, \"error\");\n    if (balanceB.lt(amountB_BN)) return notify(`Insufficient ${selectedTokenB.symbol} balance`, \"error\");\n\n    try {\n      const deadline = Math.floor(Date.now() / 1000) + 600;\n      const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, signer);\n      let tx;\n      if (selectedTokenA.address === \"MON\" || selectedTokenB.address === \"MON\") {\n        let token, amountTokenDesired, valueETH;\n        if (selectedTokenA.address === \"MON\") {\n          token = selectedTokenB;\n          amountTokenDesired = amountB_BN;\n          valueETH = amountA_BN;\n        } else {\n          token = selectedTokenA;\n          amountTokenDesired = amountA_BN;\n          valueETH = amountB_BN;\n        }\n        if (token.address !== \"MON\") await ensureApproval(token, amountTokenDesired, ROUTER_ADDRESS);\n        tx = await routerContract.addLiquidityETH(\n          token.address,\n          amountTokenDesired,\n          amountTokenDesired.mul(95).div(100),\n          valueETH.mul(95).div(100),\n          deadline,\n          { value: valueETH, gasLimit: 6000000 }\n        );\n      } else {\n        await ensureApproval(selectedTokenA, amountA_BN, ROUTER_ADDRESS);\n        await ensureApproval(selectedTokenB, amountB_BN, ROUTER_ADDRESS);\n        tx = await routerContract.addLiquidity(\n          selectedTokenA.address,\n          selectedTokenB.address,\n          amountA_BN,\n          amountB_BN,\n          amountA_BN.mul(95).div(100),\n          amountB_BN.mul(95).div(100),\n          { gasLimit: 6000000 }\n        );\n      }\n      notify(\"Adding liquidity...\", \"info\");\n      await tx.wait();\n      notify(\"Liquidity added successfully\", \"success\");\n      fetchBalances();\n    } catch (error) {\n      console.error(\"Add liquidity error:\", error);\n      notify(\"Liquidity addition failed: \" + (error.reason || error.message), \"error\");\n    }\n  };\n\n  return (\n    <section id=\"liquidityTab\" className=\"tabContent\">\n      <h2>Add Liquidity</h2>\n      <div className=\"liquidity-container\">\n        <div className=\"liquidity-input\">\n          <label>Token A</label>\n          <div className=\"input-row\">\n            <div className=\"token-select\" onClick={() => openTokenModal('tokenA')}>\n              <img src={selectedTokenA?.logo || \"https://via.placeholder.com/24\"} alt=\"Token Logo\" className=\"tokenLogo\" />\n              <span>{selectedTokenA?.symbol || \"Select Token\"}</span>\n            </div>\n            <input type=\"number\" value={amountA} onChange={(e) => setAmountA(e.target.value)} placeholder=\"0\" />\n          </div>\n          <div className=\"balanceInfo\">Balance: {balances.tokenA}</div>\n        </div>\n        <div className=\"liquidity-input\">\n          <label>Token B</label>\n          <div className=\"input-row\">\n            <div className=\"token-select\" onClick={() => openTokenModal('tokenB')}>\n              <img src={selectedTokenB?.logo || \"https://via.placeholder.com/24\"} alt=\"Token Logo\" className=\"tokenLogo\" />\n              <span>{selectedTokenB?.symbol || \"Select Token\"}</span>\n            </div>\n            <input type=\"number\" value={amountB} onChange={(e) => setAmountB(e.target.value)} placeholder=\"0\" />\n          </div>\n          <div className=\"balanceInfo\">Balance: {balances.tokenB}</div>\n        </div>\n        <button className=\"actionButton\" onClick={handleAddLiquidity}>Add Liquidity</button>\n      </div>\n      {isModalOpen && (\n        <TokenModal\n          tokenList={tokenList}\n          setTokenList={setTokenList}\n          onSelect={handleTokenSelect}\n          onClose={() => setIsModalOpen(false)}\n          provider={provider}\n        />\n      )}\n    </section>\n  );\n}\n\nexport default Liquidity;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}