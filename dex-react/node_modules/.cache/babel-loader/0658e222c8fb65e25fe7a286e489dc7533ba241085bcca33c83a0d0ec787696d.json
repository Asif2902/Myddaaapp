{"ast":null,"code":"var _jsxFileName = \"/workspaces/Myddaaapp/dex-react/src/components/Swap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TokenModal from './TokenModal';\nimport { ethers } from 'ethers';\nimport { routerABI } from '../contracts/routerABI';\nimport { erc20ABI } from '../contracts/erc20ABI';\nimport { factoryABI } from '../contracts/factoryABI';\nimport { wmonABI } from '../contracts/wmonABI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nim;\nconst ROUTER_ADDRESS = \"0x144e18DB06B4553b94ED397610D2FBf809790545\";\nconst FACTORY_ADDRESS = \"0xc98d287eFCBbb177D641FD2105dEC57996335766\";\nconst WMON_ADDRESS = \"0xf6C4e67A551bd10444e3b439A4Eb19ec46eC1215\";\nfunction Swap({\n  wallet,\n  notify,\n  tokenList,\n  setTokenList\n}) {\n  _s();\n  const [selectedTokenA, setSelectedTokenA] = useState(tokenList.find(t => t.symbol === \"MON\"));\n  const [selectedTokenB, setSelectedTokenB] = useState(tokenList.find(t => t.symbol === \"USDT\"));\n  const [amountIn, setAmountIn] = useState('');\n  const [amountOut, setAmountOut] = useState('');\n  const [priceImpact, setPriceImpact] = useState('0%');\n  const [balances, setBalances] = useState({\n    tokenA: '0',\n    tokenB: '0'\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTarget, setModalTarget] = useState('');\n  const {\n    provider,\n    signer,\n    userAddress\n  } = wallet;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchBalances();\n    }, 15000);\n    fetchBalances();\n    return () => clearInterval(interval);\n  }, [userAddress, selectedTokenA, selectedTokenB]);\n  const fetchBalances = async () => {\n    if (!userAddress) return;\n    if (selectedTokenA) await fetchBalanceForToken(selectedTokenA, 'tokenA');\n    if (selectedTokenB) await fetchBalanceForToken(selectedTokenB, 'tokenB');\n  };\n  const fetchBalanceForToken = async (token, key) => {\n    try {\n      let balance;\n      if (token.address === \"MON\") {\n        balance = await provider.getBalance(userAddress);\n      } else {\n        const tokenContract = new ethers.Contract(token.address, erc20ABI, provider);\n        balance = await tokenContract.balanceOf(userAddress);\n      }\n      balance = ethers.utils.formatUnits(balance, token.decimals);\n      setBalances(prev => ({\n        ...prev,\n        [key]: abbreviateNumber(parseFloat(balance))\n      }));\n    } catch (error) {\n      console.error(`Error fetching balance for ${token.symbol}:`, error);\n    }\n  };\n  const abbreviateNumber = num => {\n    if (num >= 1e12) return (num / 1e12).toFixed(2) + \"T\";\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + \"B\";\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + \"M\";\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + \"K\";\n    return num.toFixed(5);\n  };\n  const isStable = async tokenAddress => {\n    if (tokenAddress === \"MON\") return false;\n    const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n    return await factoryContract.isStableCoin(tokenAddress);\n  };\n  const calculatePriceImpact = async (tokenIn, tokenOut, amountInRaw) => {\n    if (!tokenIn || !tokenOut || !amountInRaw || parseFloat(amountInRaw) <= 0) return \"0%\";\n    if (tokenIn.symbol === \"MON\" && tokenOut.symbol === \"WMON\" || tokenIn.symbol === \"WMON\" && tokenOut.symbol === \"MON\") {\n      return \"0% (1:1)\";\n    }\n    const isStableIn = await isStable(tokenIn.address);\n    const isStableOut = await isStable(tokenOut.address);\n    if (isStableIn && isStableOut) return \"0% (Stable)\";\n    const amountIn = ethers.utils.parseUnits(amountInRaw, tokenIn.decimals);\n    let tokenA = tokenIn.address === \"MON\" ? WMON_ADDRESS : tokenIn.address;\n    let tokenB = tokenOut.address === \"MON\" ? WMON_ADDRESS : tokenOut.address;\n    const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n    const pairAddress = await factoryContract.getPair(tokenA, tokenB);\n    if (pairAddress === ethers.constants.AddressZero) return \"N/A (No Pair)\";\n    const pairContract = new ethers.Contract(pairAddress, lpTokenABI, provider);\n    const [reserve0, reserve1] = await pairContract.getReserves();\n    const token0 = await pairContract.token0();\n    let reserveA = tokenA.toLowerCase() === token0.toLowerCase() ? reserve0 : reserve1;\n    let reserveB = tokenA.toLowerCase() === token0.toLowerCase() ? reserve1 : reserve0;\n    if (reserveA.isZero() || reserveB.isZero()) return \"0% (Empty Reserves)\";\n    const currentPrice = reserveB.mul(ethers.BigNumber.from(10).pow(18)).div(reserveA);\n    const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, provider);\n    const path = [tokenA, tokenB];\n    const amountsOut = await routerContract.getAmountsOut(amountIn, path);\n    const amountOut = amountsOut[1];\n    if (amountOut.isZero()) return \"100% (No liquidity)\";\n    const effectivePrice = amountOut.mul(ethers.BigNumber.from(10).pow(18)).div(amountIn);\n    const priceImpactBN = currentPrice.sub(effectivePrice).mul(10000).div(currentPrice);\n    return (priceImpactBN.toNumber() / 100).toFixed(2) + \"%\";\n  };\n  useEffect(() => {\n    const calculateOutput = async () => {\n      if (!selectedTokenA || !selectedTokenB || !amountIn || parseFloat(amountIn) <= 0) {\n        setAmountOut('0');\n        setPriceImpact('0%');\n        return;\n      }\n      try {\n        let amountInBN = ethers.utils.parseUnits(amountIn, selectedTokenA.decimals);\n        const isStableIn = await isStable(selectedTokenA.address);\n        const isStableOut = await isStable(selectedTokenB.address);\n        if (selectedTokenA.symbol === \"MON\" && selectedTokenB.symbol === \"WMON\" || selectedTokenA.symbol === \"WMON\" && selectedTokenB.symbol === \"MON\") {\n          setAmountOut(amountIn);\n          setPriceImpact(\"0% (1:1)\");\n        } else if (isStableIn && isStableOut) {\n          setAmountOut(amountIn);\n          setPriceImpact(\"0% (Stable)\");\n        } else {\n          const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, provider);\n          let path = [selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address, selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address];\n          let amountsOut = await routerContract.getAmountsOut(amountInBN, path);\n          let amountOutBN = amountsOut[amountsOut.length - 1];\n          setAmountOut(ethers.utils.formatUnits(amountOutBN, selectedTokenB.decimals));\n          setPriceImpact(await calculatePriceImpact(selectedTokenA, selectedTokenB, amountIn));\n        }\n      } catch (error) {\n        console.error(\"Error calculating swap output:\", error);\n        setAmountOut('Error');\n        setPriceImpact('Error');\n      }\n    };\n    calculateOutput();\n  }, [amountIn, selectedTokenA, selectedTokenB]);\n  const openTokenModal = target => {\n    setModalTarget(target);\n    setIsModalOpen(true);\n  };\n  const handleTokenSelect = token => {\n    if (modalTarget === 'tokenA') setSelectedTokenA(token);else if (modalTarget === 'tokenB') setSelectedTokenB(token);\n    setIsModalOpen(false);\n    fetchBalances();\n  };\n  const handleMax = async () => {\n    if (!selectedTokenA) return notify(\"Select a token first\", \"error\");\n    let balance;\n    if (selectedTokenA.address === \"MON\") {\n      balance = await provider.getBalance(userAddress);\n    } else {\n      const tokenContract = new ethers.Contract(selectedTokenA.address, erc20ABI, provider);\n      balance = await tokenContract.balanceOf(userAddress);\n    }\n    setAmountIn(ethers.utils.formatUnits(balance, selectedTokenA.decimals));\n  };\n  const handleSwitch = () => {\n    setSelectedTokenA(selectedTokenB);\n    setSelectedTokenB(selectedTokenA);\n    setAmountIn('');\n    setAmountOut('');\n    fetchBalances();\n  };\n  const ensureApproval = async (token, amount, spender) => {\n    if (token.address === \"MON\") return true;\n    const tokenContract = new ethers.Contract(token.address, erc20ABI, signer);\n    const allowance = await tokenContract.allowance(userAddress, spender);\n    if (allowance.lt(amount)) {\n      notify(`Approving ${token.symbol}...`, \"info\");\n      const tx = await tokenContract.approve(spender, amount);\n      await tx.wait();\n      notify(`${token.symbol} approved successfully`, \"success\");\n    }\n    return true;\n  };\n  const wrapMon = async amount => {\n    const wmonContract = new ethers.Contract(WMON_ADDRESS, wmonABI, signer);\n    const tx = await wmonContract.deposit({\n      value: amount\n    });\n    notify(\"Wrapping MON to WMON...\", \"info\");\n    await tx.wait();\n    notify(\"Wrapped successfully\", \"success\");\n  };\n  const unwrapMon = async amount => {\n    const wmonContract = new ethers.Contract(WMON_ADDRESS, wmonABI, signer);\n    const tx = await wmonContract.withdraw(amount);\n    notify(\"Unwrapping WMON to MON...\", \"info\");\n    await tx.wait();\n    notify(\"Unwrapped successfully\", \"success\");\n  };\n  const handleSwap = async () => {\n    if (!selectedTokenA || !selectedTokenB) return notify(\"Select both tokens\", \"error\");\n    if (!amountIn || parseFloat(amountIn) <= 0) return notify(\"Enter a valid amount\", \"error\");\n    let amountInBN = ethers.utils.parseUnits(amountIn, selectedTokenA.decimals);\n    try {\n      if (selectedTokenA.symbol === \"MON\" && selectedTokenB.symbol === \"WMON\" || selectedTokenA.symbol === \"WMON\" && selectedTokenB.symbol === \"MON\") {\n        if (selectedTokenA.symbol === \"MON\") {\n          await wrapMon(amountInBN);\n        } else {\n          await unwrapMon(amountInBN);\n        }\n        fetchBalances();\n        return;\n      }\n      const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, signer);\n      let deadline = Math.floor(Date.now() / 1000) + 600;\n      let tx;\n      const isStableIn = await isStable(selectedTokenA.address);\n      const isStableOut = await isStable(selectedTokenB.address);\n      if (isStableIn && isStableOut) {\n        await ensureApproval(selectedTokenA, amountInBN, ROUTER_ADDRESS);\n        tx = await routerContract.swapExactStableForStable(amountInBN, selectedTokenA.address, selectedTokenB.address, deadline);\n      } else {\n        let path = [selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address, selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address];\n        let amountsOut = await routerContract.getAmountsOut(amountInBN, path);\n        let expectedOut = amountsOut[amountsOut.length - 1];\n        let amountOutMin = expectedOut.mul(95).div(100);\n        if (selectedTokenA.address === \"MON\") {\n          tx = await routerContract.swapExactETHForTokens(amountOutMin, path, deadline, {\n            value: amountInBN\n          });\n        } else if (selectedTokenB.address === \"MON\") {\n          await ensureApproval(selectedTokenA, amountInBN, ROUTER_ADDRESS);\n          tx = await routerContract.swapExactTokensForETH(amountInBN, amountOutMin, path, deadline);\n        } else {\n          await ensureApproval(selectedTokenA, amountInBN, ROUTER_ADDRESS);\n          tx = await routerContract.swapExactTokensForTokens(amountInBN, amountOutMin, path);\n        }\n      }\n      notify(\"Swap transaction sent\", \"info\");\n      await tx.wait();\n      notify(\"Swap executed successfully\", \"success\");\n      fetchBalances();\n    } catch (error) {\n      console.error(\"Swap error:\", error);\n      notify(\"Swap failed: \" + (error.reason || error.message), \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"swapTab\",\n    className: \"tabContent active\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Swap Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swap-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swap-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-select\",\n            onClick: () => openTokenModal('tokenA'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (selectedTokenA === null || selectedTokenA === void 0 ? void 0 : selectedTokenA.logo) || \"https://via.placeholder.com/24\",\n              alt: \"Token Logo\",\n              className: \"tokenLogo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (selectedTokenA === null || selectedTokenA === void 0 ? void 0 : selectedTokenA.symbol) || \"Select Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amountIn,\n            onChange: e => setAmountIn(e.target.value),\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMax,\n            children: \"MAX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balanceInfo\",\n          children: [\"Balance: \", balances.tokenA]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switchButton\",\n        onClick: handleSwitch,\n        children: \"\\u21C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swap-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-select\",\n            onClick: () => openTokenModal('tokenB'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (selectedTokenB === null || selectedTokenB === void 0 ? void 0 : selectedTokenB.logo) || \"https://via.placeholder.com/24\",\n              alt: \"Token Logo\",\n              className: \"tokenLogo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (selectedTokenB === null || selectedTokenB === void 0 ? void 0 : selectedTokenB.symbol) || \"Select Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amountOut,\n            readOnly: true,\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balanceInfo\",\n          children: [\"Balance: \", balances.tokenB]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"priceImpactInfo\",\n        children: [\"Price Impact: \", priceImpact]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"actionButton\",\n        onClick: handleSwap,\n        children: \"Swap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(TokenModal, {\n      tokenList: tokenList,\n      setTokenList: setTokenList,\n      onSelect: handleTokenSelect,\n      onClose: () => setIsModalOpen(false),\n      provider: provider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"qCPCvI1N4N0uffWZ8m1ZYDhVvFM=\");\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","useState","useEffect","TokenModal","ethers","routerABI","erc20ABI","factoryABI","wmonABI","jsxDEV","_jsxDEV","im","ROUTER_ADDRESS","FACTORY_ADDRESS","WMON_ADDRESS","Swap","wallet","notify","tokenList","setTokenList","_s","selectedTokenA","setSelectedTokenA","find","t","symbol","selectedTokenB","setSelectedTokenB","amountIn","setAmountIn","amountOut","setAmountOut","priceImpact","setPriceImpact","balances","setBalances","tokenA","tokenB","isModalOpen","setIsModalOpen","modalTarget","setModalTarget","provider","signer","userAddress","interval","setInterval","fetchBalances","clearInterval","fetchBalanceForToken","token","key","balance","address","getBalance","tokenContract","Contract","balanceOf","utils","formatUnits","decimals","prev","abbreviateNumber","parseFloat","error","console","num","toFixed","isStable","tokenAddress","factoryContract","isStableCoin","calculatePriceImpact","tokenIn","tokenOut","amountInRaw","isStableIn","isStableOut","parseUnits","pairAddress","getPair","constants","AddressZero","pairContract","lpTokenABI","reserve0","reserve1","getReserves","token0","reserveA","toLowerCase","reserveB","isZero","currentPrice","mul","BigNumber","from","pow","div","routerContract","path","amountsOut","getAmountsOut","effectivePrice","priceImpactBN","sub","toNumber","calculateOutput","amountInBN","amountOutBN","length","openTokenModal","target","handleTokenSelect","handleMax","handleSwitch","ensureApproval","amount","spender","allowance","lt","tx","approve","wait","wrapMon","wmonContract","deposit","value","unwrapMon","withdraw","handleSwap","deadline","Math","floor","Date","now","swapExactStableForStable","expectedOut","amountOutMin","swapExactETHForTokens","swapExactTokensForETH","swapExactTokensForTokens","reason","message","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","logo","alt","type","onChange","e","placeholder","readOnly","onSelect","onClose","_c","$RefreshReg$"],"sources":["/workspaces/Myddaaapp/dex-react/src/components/Swap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TokenModal from './TokenModal';\nimport { ethers } from 'ethers';\nimport { routerABI } from '../contracts/routerABI';\nimport { erc20ABI } from '../contracts/erc20ABI';\nimport { factoryABI } from '../contracts/factoryABI';\nimport { wmonABI } from '../contracts/wmonABI';\nim\nconst ROUTER_ADDRESS = \"0x144e18DB06B4553b94ED397610D2FBf809790545\";\nconst FACTORY_ADDRESS = \"0xc98d287eFCBbb177D641FD2105dEC57996335766\";\nconst WMON_ADDRESS = \"0xf6C4e67A551bd10444e3b439A4Eb19ec46eC1215\";\n\nfunction Swap({ wallet, notify, tokenList, setTokenList }) {\n  const [selectedTokenA, setSelectedTokenA] = useState(tokenList.find(t => t.symbol === \"MON\"));\n  const [selectedTokenB, setSelectedTokenB] = useState(tokenList.find(t => t.symbol === \"USDT\"));\n  const [amountIn, setAmountIn] = useState('');\n  const [amountOut, setAmountOut] = useState('');\n  const [priceImpact, setPriceImpact] = useState('0%');\n  const [balances, setBalances] = useState({ tokenA: '0', tokenB: '0' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTarget, setModalTarget] = useState('');\n  const { provider, signer, userAddress } = wallet;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchBalances();\n    }, 15000);\n    fetchBalances();\n    return () => clearInterval(interval);\n  }, [userAddress, selectedTokenA, selectedTokenB]);\n\n  const fetchBalances = async () => {\n    if (!userAddress) return;\n    if (selectedTokenA) await fetchBalanceForToken(selectedTokenA, 'tokenA');\n    if (selectedTokenB) await fetchBalanceForToken(selectedTokenB, 'tokenB');\n  };\n\n  const fetchBalanceForToken = async (token, key) => {\n    try {\n      let balance;\n      if (token.address === \"MON\") {\n        balance = await provider.getBalance(userAddress);\n      } else {\n        const tokenContract = new ethers.Contract(token.address, erc20ABI, provider);\n        balance = await tokenContract.balanceOf(userAddress);\n      }\n      balance = ethers.utils.formatUnits(balance, token.decimals);\n      setBalances(prev => ({ ...prev, [key]: abbreviateNumber(parseFloat(balance)) }));\n    } catch (error) {\n      console.error(`Error fetching balance for ${token.symbol}:`, error);\n    }\n  };\n\n  const abbreviateNumber = (num) => {\n    if (num >= 1e12) return (num / 1e12).toFixed(2) + \"T\";\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + \"B\";\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + \"M\";\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + \"K\";\n    return num.toFixed(5);\n  };\n\n  const isStable = async (tokenAddress) => {\n    if (tokenAddress === \"MON\") return false;\n    const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n    return await factoryContract.isStableCoin(tokenAddress);\n  };\n\n  const calculatePriceImpact = async (tokenIn, tokenOut, amountInRaw) => {\n    if (!tokenIn || !tokenOut || !amountInRaw || parseFloat(amountInRaw) <= 0) return \"0%\";\n    if ((tokenIn.symbol === \"MON\" && tokenOut.symbol === \"WMON\") || \n        (tokenIn.symbol === \"WMON\" && tokenOut.symbol === \"MON\")) {\n      return \"0% (1:1)\";\n    }\n    const isStableIn = await isStable(tokenIn.address);\n    const isStableOut = await isStable(tokenOut.address);\n    if (isStableIn && isStableOut) return \"0% (Stable)\";\n    const amountIn = ethers.utils.parseUnits(amountInRaw, tokenIn.decimals);\n    let tokenA = tokenIn.address === \"MON\" ? WMON_ADDRESS : tokenIn.address;\n    let tokenB = tokenOut.address === \"MON\" ? WMON_ADDRESS : tokenOut.address;\n    const factoryContract = new ethers.Contract(FACTORY_ADDRESS, factoryABI, provider);\n    const pairAddress = await factoryContract.getPair(tokenA, tokenB);\n    if (pairAddress === ethers.constants.AddressZero) return \"N/A (No Pair)\";\n    const pairContract = new ethers.Contract(pairAddress, lpTokenABI, provider);\n    const [reserve0, reserve1] = await pairContract.getReserves();\n    const token0 = await pairContract.token0();\n    let reserveA = tokenA.toLowerCase() === token0.toLowerCase() ? reserve0 : reserve1;\n    let reserveB = tokenA.toLowerCase() === token0.toLowerCase() ? reserve1 : reserve0;\n    if (reserveA.isZero() || reserveB.isZero()) return \"0% (Empty Reserves)\";\n    const currentPrice = reserveB.mul(ethers.BigNumber.from(10).pow(18)).div(reserveA);\n    const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, provider);\n    const path = [tokenA, tokenB];\n    const amountsOut = await routerContract.getAmountsOut(amountIn, path);\n    const amountOut = amountsOut[1];\n    if (amountOut.isZero()) return \"100% (No liquidity)\";\n    const effectivePrice = amountOut.mul(ethers.BigNumber.from(10).pow(18)).div(amountIn);\n    const priceImpactBN = currentPrice.sub(effectivePrice).mul(10000).div(currentPrice);\n    return (priceImpactBN.toNumber() / 100).toFixed(2) + \"%\";\n  };\n\n  useEffect(() => {\n    const calculateOutput = async () => {\n      if (!selectedTokenA || !selectedTokenB || !amountIn || parseFloat(amountIn) <= 0) {\n        setAmountOut('0');\n        setPriceImpact('0%');\n        return;\n      }\n      try {\n        let amountInBN = ethers.utils.parseUnits(amountIn, selectedTokenA.decimals);\n        const isStableIn = await isStable(selectedTokenA.address);\n        const isStableOut = await isStable(selectedTokenB.address);\n        if ((selectedTokenA.symbol === \"MON\" && selectedTokenB.symbol === \"WMON\") ||\n            (selectedTokenA.symbol === \"WMON\" && selectedTokenB.symbol === \"MON\")) {\n          setAmountOut(amountIn);\n          setPriceImpact(\"0% (1:1)\");\n        } else if (isStableIn && isStableOut) {\n          setAmountOut(amountIn);\n          setPriceImpact(\"0% (Stable)\");\n        } else {\n          const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, provider);\n          let path = [\n            selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address,\n            selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address\n          ];\n          let amountsOut = await routerContract.getAmountsOut(amountInBN, path);\n          let amountOutBN = amountsOut[amountsOut.length - 1];\n          setAmountOut(ethers.utils.formatUnits(amountOutBN, selectedTokenB.decimals));\n          setPriceImpact(await calculatePriceImpact(selectedTokenA, selectedTokenB, amountIn));\n        }\n      } catch (error) {\n        console.error(\"Error calculating swap output:\", error);\n        setAmountOut('Error');\n        setPriceImpact('Error');\n      }\n    };\n    calculateOutput();\n  }, [amountIn, selectedTokenA, selectedTokenB]);\n\n  const openTokenModal = (target) => {\n    setModalTarget(target);\n    setIsModalOpen(true);\n  };\n\n  const handleTokenSelect = (token) => {\n    if (modalTarget === 'tokenA') setSelectedTokenA(token);\n    else if (modalTarget === 'tokenB') setSelectedTokenB(token);\n    setIsModalOpen(false);\n    fetchBalances();\n  };\n\n  const handleMax = async () => {\n    if (!selectedTokenA) return notify(\"Select a token first\", \"error\");\n    let balance;\n    if (selectedTokenA.address === \"MON\") {\n      balance = await provider.getBalance(userAddress);\n    } else {\n      const tokenContract = new ethers.Contract(selectedTokenA.address, erc20ABI, provider);\n      balance = await tokenContract.balanceOf(userAddress);\n    }\n    setAmountIn(ethers.utils.formatUnits(balance, selectedTokenA.decimals));\n  };\n\n  const handleSwitch = () => {\n    setSelectedTokenA(selectedTokenB);\n    setSelectedTokenB(selectedTokenA);\n    setAmountIn('');\n    setAmountOut('');\n    fetchBalances();\n  };\n\n  const ensureApproval = async (token, amount, spender) => {\n    if (token.address === \"MON\") return true;\n    const tokenContract = new ethers.Contract(token.address, erc20ABI, signer);\n    const allowance = await tokenContract.allowance(userAddress, spender);\n    if (allowance.lt(amount)) {\n      notify(`Approving ${token.symbol}...`, \"info\");\n      const tx = await tokenContract.approve(spender, amount);\n      await tx.wait();\n      notify(`${token.symbol} approved successfully`, \"success\");\n    }\n    return true;\n  };\n\n  const wrapMon = async (amount) => {\n    const wmonContract = new ethers.Contract(WMON_ADDRESS, wmonABI, signer);\n    const tx = await wmonContract.deposit({ value: amount });\n    notify(\"Wrapping MON to WMON...\", \"info\");\n    await tx.wait();\n    notify(\"Wrapped successfully\", \"success\");\n  };\n\n  const unwrapMon = async (amount) => {\n    const wmonContract = new ethers.Contract(WMON_ADDRESS, wmonABI, signer);\n    const tx = await wmonContract.withdraw(amount);\n    notify(\"Unwrapping WMON to MON...\", \"info\");\n    await tx.wait();\n    notify(\"Unwrapped successfully\", \"success\");\n  };\n\n  const handleSwap = async () => {\n    if (!selectedTokenA || !selectedTokenB) return notify(\"Select both tokens\", \"error\");\n    if (!amountIn || parseFloat(amountIn) <= 0) return notify(\"Enter a valid amount\", \"error\");\n    let amountInBN = ethers.utils.parseUnits(amountIn, selectedTokenA.decimals);\n    try {\n      if ((selectedTokenA.symbol === \"MON\" && selectedTokenB.symbol === \"WMON\") ||\n          (selectedTokenA.symbol === \"WMON\" && selectedTokenB.symbol === \"MON\")) {\n        if (selectedTokenA.symbol === \"MON\") {\n          await wrapMon(amountInBN);\n        } else {\n          await unwrapMon(amountInBN);\n        }\n        fetchBalances();\n        return;\n      }\n      const routerContract = new ethers.Contract(ROUTER_ADDRESS, routerABI, signer);\n      let deadline = Math.floor(Date.now() / 1000) + 600;\n      let tx;\n      const isStableIn = await isStable(selectedTokenA.address);\n      const isStableOut = await isStable(selectedTokenB.address);\n      if (isStableIn && isStableOut) {\n        await ensureApproval(selectedTokenA, amountInBN, ROUTER_ADDRESS);\n        tx = await routerContract.swapExactStableForStable(\n          amountInBN,\n          selectedTokenA.address,\n          selectedTokenB.address,\n          deadline\n        );\n      } else {\n        let path = [\n          selectedTokenA.address === \"MON\" ? WMON_ADDRESS : selectedTokenA.address,\n          selectedTokenB.address === \"MON\" ? WMON_ADDRESS : selectedTokenB.address\n        ];\n        let amountsOut = await routerContract.getAmountsOut(amountInBN, path);\n        let expectedOut = amountsOut[amountsOut.length - 1];\n        let amountOutMin = expectedOut.mul(95).div(100);\n        if (selectedTokenA.address === \"MON\") {\n          tx = await routerContract.swapExactETHForTokens(\n            amountOutMin,\n            path,\n            deadline,\n            { value: amountInBN }\n          );\n        } else if (selectedTokenB.address === \"MON\") {\n          await ensureApproval(selectedTokenA, amountInBN, ROUTER_ADDRESS);\n          tx = await routerContract.swapExactTokensForETH(\n            amountInBN,\n            amountOutMin,\n            path,\n            deadline\n          );\n        } else {\n          await ensureApproval(selectedTokenA, amountInBN, ROUTER_ADDRESS);\n          tx = await routerContract.swapExactTokensForTokens(\n            amountInBN,\n            amountOutMin,\n            path\n          );\n        }\n      }\n      notify(\"Swap transaction sent\", \"info\");\n      await tx.wait();\n      notify(\"Swap executed successfully\", \"success\");\n      fetchBalances();\n    } catch (error) {\n      console.error(\"Swap error:\", error);\n      notify(\"Swap failed: \" + (error.reason || error.message), \"error\");\n    }\n  };\n\n  return (\n    <section id=\"swapTab\" className=\"tabContent active\">\n      <h2>Swap Tokens</h2>\n      <div className=\"swap-container\">\n        <div className=\"swap-input\">\n          <label>From</label>\n          <div className=\"input-row\">\n            <div className=\"token-select\" onClick={() => openTokenModal('tokenA')}>\n              <img src={selectedTokenA?.logo || \"https://via.placeholder.com/24\"} alt=\"Token Logo\" className=\"tokenLogo\" />\n              <span>{selectedTokenA?.symbol || \"Select Token\"}</span>\n            </div>\n            <input type=\"number\" value={amountIn} onChange={(e) => setAmountIn(e.target.value)} placeholder=\"0\" />\n            <button onClick={handleMax}>MAX</button>\n          </div>\n          <div className=\"balanceInfo\">Balance: {balances.tokenA}</div>\n        </div>\n        <button className=\"switchButton\" onClick={handleSwitch}>⇆</button>\n        <div className=\"swap-input\">\n          <label>To</label>\n          <div className=\"input-row\">\n            <div className=\"token-select\" onClick={() => openTokenModal('tokenB')}>\n              <img src={selectedTokenB?.logo || \"https://via.placeholder.com/24\"} alt=\"Token Logo\" className=\"tokenLogo\" />\n              <span>{selectedTokenB?.symbol || \"Select Token\"}</span>\n            </div>\n            <input type=\"number\" value={amountOut} readOnly placeholder=\"0\" />\n          </div>\n          <div className=\"balanceInfo\">Balance: {balances.tokenB}</div>\n        </div>\n        <div className=\"priceImpactInfo\">Price Impact: {priceImpact}</div>\n        <button className=\"actionButton\" onClick={handleSwap}>Swap</button>\n      </div>\n      {isModalOpen && (\n        <TokenModal\n          tokenList={tokenList}\n          setTokenList={setTokenList}\n          onSelect={handleTokenSelect}\n          onClose={() => setIsModalOpen(false)}\n          provider={provider}\n        />\n      )}\n    </section>\n  );\n}\n\nexport default Swap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}