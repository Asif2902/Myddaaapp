{"ast":null,"code":"var _jsxFileName = \"/workspaces/Myddaaapp/dex-react/src/components/Header.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header({\n  wallet,\n  notify\n}) {\n  const {\n    isConnected,\n    userAddress,\n    connectWallet\n  } = wallet;\n  const handleConnect = async () => {\n    const success = await connectWallet();\n    if (success) {\n      notify(`Wallet connected: ${userAddress.slice(0, 6)}...`, 'success');\n    } else {\n      notify('Wallet connection failed', 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"A DEX V2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isConnected ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Connected: \", userAddress.slice(0, 6), \"...\", userAddress.slice(-4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"connectWallet\",\n      onClick: handleConnect,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","wallet","notify","isConnected","userAddress","connectWallet","handleConnect","success","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Myddaaapp/dex-react/src/components/Header.js"],"sourcesContent":["import React from 'react';\n\nfunction Header({ wallet, notify }) {\n  const { isConnected, userAddress, connectWallet } = wallet;\n\n  const handleConnect = async () => {\n    const success = await connectWallet();\n    if (success) {\n      notify(`Wallet connected: ${userAddress.slice(0, 6)}...`, 'success');\n    } else {\n      notify('Wallet connection failed', 'error');\n    }\n  };\n\n  return (\n    <header>\n      <h1>A DEX V2</h1>\n      {isConnected ? (\n        <span>Connected: {userAddress.slice(0, 6)}...{userAddress.slice(-4)}</span>\n      ) : (\n        <button id=\"connectWallet\" onClick={handleConnect}>Connect Wallet</button>\n      )}\n    </header>\n  );\n}\n\nexport default Header;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,EAAE;EAClC,MAAM;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAGJ,MAAM;EAE1D,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,OAAO,GAAG,MAAMF,aAAa,CAAC,CAAC;IACrC,IAAIE,OAAO,EAAE;MACXL,MAAM,CAAC,qBAAqBE,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC;IACtE,CAAC,MAAM;MACLN,MAAM,CAAC,0BAA0B,EAAE,OAAO,CAAC;IAC7C;EACF,CAAC;EAED,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBV,WAAW,gBACVJ,OAAA;MAAAU,QAAA,GAAM,aAAW,EAACL,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,KAAG,EAACJ,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,gBAE3Ed,OAAA;MAAQe,EAAE,EAAC,eAAe;MAACC,OAAO,EAAET,aAAc;MAAAG,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC1E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACG,EAAA,GAtBQhB,MAAM;AAwBf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}